name: App service ci/cd pipeline

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"

env:
  AWS_REGION: us-east-1
  REGISTERY: 754663727739.dkr.ecr.us-east-1.amazonaws.com
  REPOSITORY: 754663727739.dkr.ecr.us-east-1.amazonaws.com/terraform-project
  IMAGE_TAG: latest
  SERVICE: terraform-project-ecs
  CLUSTER: terraform-project-cluster

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to aws ecr
        id: login-ecr
        run: |
          echo "Login in to aws ecr using the cli command!"
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REGISTERY

      - name: Build, tag, and push image to aws ecr
        id: build-image
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          # Build a docker image and tag
          # Then push image it to aws ECR
          echo "Building image..."
          docker build -t testing .
          docker tag testing:latest $REPOSITORY:$IMAGE_TAG
          echo "Pushing image to aws ecr..."
          docker push $REPOSITORY:$IMAGE_TAG
          echo "Pushed to docker registery successfully!"

      - name: Update ECS service
        id: update-service
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          # apk add --no-cache jq
          echo "Updating the service..."
          aws ecs update-service --cluster $CLUSTER --service $SERVICE --force-new-deployment --region $AWS_REGION


